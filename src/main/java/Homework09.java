/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

/**
 *
 * @author MoaathAlrajab
 */
public class Homework09 {
    
    // ToDo 01:  Write an algorithm to solve the following problem
    /*
    The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.


What is the value of the first triangle number to have over one hundred divisors?
    
    Answer: I think its number 73920. Its the first list thats very long so Its probably over 100 divisors
    
    */

    
    
    
   public static void main(String[] args){
       //I'm not sure if this is what you asked for but I recreated the algroithm to output the example of the seven traingle numbers
       int num = 1000;
       int sum = 0;
       for(int i = 1; i <= num; i++){
           sum += i;
           System.out.print(sum+": ");
           int j = 1;
           while(j <= sum){
                if(sum % j == 0){
                   if(sum == j){
                       System.out.print(sum);
                   }else{
                       System.out.print(j + ",");
                   }
               }
                j++;
               
           }
           System.out.println();
       }
       
       
   }
   
    
    
}
